{"version":3,"sources":["App.js","AppContainer.js","index.js"],"names":["App","lyrics","map","lyric","link","LYRIC_FILE_PATHS","AppContainer","useState","setLyrics","isFetchError","setIsFetchError","useEffect","a","Promise","all","path","fetch","responses","response","json","data","fetchLyrics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAeeA,EAZH,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACV,8BACE,6BACGA,EAAOC,KAAI,SAACC,GAAD,OAAW,6BAAKA,EAAMC,eCHlCC,EAAmB,CACvB,sBACA,0BACA,+BAgCaC,EA1BM,WACnB,MAA4BC,mBAAS,MAArC,mBAAON,EAAP,KAAeO,EAAf,KACA,EAAwCD,oBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAeA,OAbAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAEQC,QAAQC,IAAIT,EAAiBH,KAAI,SAACa,GAAD,OAAUC,MAAMD,OAFzD,cAEVE,EAFU,gBAGGJ,QAAQC,IAAIG,EAAUf,KAAI,SAACgB,GAAD,OAAeA,EAASC,WAHrD,OAGVC,EAHU,OAIhBZ,EAAUY,GAJM,kDAMhBV,GAAgB,GANA,0DAAH,qDASjBW,KACC,IAEY,OAAXpB,EACK,cAAC,EAAD,CAAKA,OAAQA,IAElBQ,EACK,8BAEF,cC9BTa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cbadf740.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst App = ({ lyrics }) => (\r\n  <div>\r\n    <ul>\r\n      {lyrics.map((lyric) => <li>{lyric.link}</li>)}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nApp.propTypes = {\r\n  lyrics: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nimport App from './App';\r\n\r\nconst LYRIC_FILE_PATHS = [\r\n  'data/ja-mur-ja.json',\r\n  'data/pyala-rakh-de.json',\r\n  'data/sambh-leh-dahooda.json',\r\n];\r\n\r\n/**\r\n * Ensures `tree.json` is readable and parses it as JSON\r\n */\r\nconst AppContainer = () => {\r\n  const [lyrics, setLyrics] = useState(null);\r\n  const [isFetchError, setIsFetchError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLyrics = async () => {\r\n      try {\r\n        const responses = await Promise.all(LYRIC_FILE_PATHS.map((path) => fetch(path)));\r\n        const data = await Promise.all(responses.map((response) => (response.json())));\r\n        setLyrics(data);\r\n      } catch {\r\n        setIsFetchError(true);\r\n      }\r\n    };\r\n    fetchLyrics();\r\n  }, []);\r\n\r\n  if (lyrics !== null) {\r\n    return <App lyrics={lyrics} />;\r\n  }\r\n  if (isFetchError) {\r\n    return 'Oops! Something went wrong.';\r\n  }\r\n  return 'Loading...';\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}