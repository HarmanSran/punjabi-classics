{"version":3,"sources":["components/AppToolbar/components/GithubButton.js","components/AppToolbar/components/BackButton.js","components/AppToolbar/AppToolbar.js","components/LyricsGrid/components/LyricsCard.js","components/LyricsGrid/LyricsGrid.js","components/LyricsPage/LyricsPage.js","App.js","AppContainer.js","index.js"],"names":["GithubButton","Tooltip","title","aria-label","IconButton","edge","color","onClick","window","open","repository","useStyles","makeStyles","wrapper","marginRight","BackButton","classes","className","component","Link","to","theme","root","flexGrow","display","actions","position","marginLeft","spacing","width","AppToolbar","pathname","useLocation","AppBar","Toolbar","Typography","variant","noWrap","card","cardContent","height","fontSize","subTitle","marginBottom","LyricsCard","id","singer","originalTitle","translatedTitle","lyricist","Card","CardContent","gutterBottom","CardActions","Button","size","defaultProps","LyricsGrid","lyricsList","Grid","container","justify","map","item","original","english","HorizontalLine","style","maxWidth","LyricsPage","activeLyricsId","useParams","find","link","language","translation","commentary","lyrics","footnotes","textAlign","url","margin","comment","i","toString","lyric","fontWeight","footnote","createMuiTheme","palette","primary","main","contentContainer","App","ThemeProvider","path","LYRIC_FILE_NAMES","AppContainer","useState","setLyricsList","isFetchError","setIsFetchError","useEffect","a","Promise","all","name","fetch","responses","response","json","data","fetchLyrics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de917829.chunk.js","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { repository } from '../../../../package.json';\r\n\r\nconst GithubButton = () => (\r\n  <Tooltip title=\"Source\" aria-label=\"source\">\r\n    <IconButton\r\n      edge=\"start\"\r\n      color=\"inherit\"\r\n      aria-label=\"open github\"\r\n      onClick={() => window.open(repository)}\r\n    >\r\n      <GitHubIcon />\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n\r\nexport default GithubButton;\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    marginRight: '12px',\r\n  },\r\n});\r\n\r\nconst BackButton = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Tooltip title=\"Back\" aria-label=\"back\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"back\"\r\n          component={Link}\r\n          to=\"/\"\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom';\r\n// import SearchField from './components/SearchField';\r\nimport GithubButton from './components/GithubButton';\r\nimport BackButton from './components/BackButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'block',\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst AppToolbar = () => {\r\n  const classes = useStyles();\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"primary\">\r\n        <Toolbar>\r\n          {(pathname !== '/') && <BackButton />}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Punjabi Classics\r\n          </Typography>\r\n          <div className={classes.actions}>\r\n            {/* <SearchField /> */}\r\n            <GithubButton />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Empty <Toolbar> to give appropriate vertical padding since actual <AppBar> is fixed position */}\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppToolbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '400px',\r\n  },\r\n  cardContent: {\r\n    height: '150px',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  subTitle: {\r\n    fontSize: 13,\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst LyricsCard = ({\r\n  id, singer, originalTitle, translatedTitle, lyricist,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {singer}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {originalTitle}\r\n        </Typography>\r\n        <Typography className={classes.subTitle} color=\"textSecondary\">\r\n          {`Lyricist: ${lyricist}`}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {`\"${translatedTitle}\"`}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button component={Link} to={`/lyrics/${id}`} size=\"small\">Go to lyrics</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLyricsCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  singer: PropTypes.string.isRequired,\r\n  originalTitle: PropTypes.string.isRequired,\r\n  translatedTitle: PropTypes.string.isRequired,\r\n  lyricist: PropTypes.string,\r\n};\r\n\r\nLyricsCard.defaultProps = {\r\n  lyricist: 'Unknown',\r\n};\r\n\r\nexport default LyricsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LyricsCard from './components/LyricsCard';\r\n\r\nconst LyricsGrid = ({ lyricsList }) => (\r\n  <Grid\r\n    container\r\n    spacing={3}\r\n    justify=\"center\"\r\n  >\r\n    {lyricsList.map(({\r\n      singer, title, lyricist, id,\r\n    }) => (\r\n      <Grid item key={id}>\r\n        <LyricsCard\r\n          id={id}\r\n          singer={singer}\r\n          originalTitle={title.original}\r\n          translatedTitle={title.english}\r\n          lyricist={lyricist}\r\n        />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nLyricsGrid.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    singer: PropTypes.string.isRequired,\r\n    title: PropTypes.shape({\r\n      original: PropTypes.string.isRequired,\r\n      english: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    lyricist: PropTypes.string,\r\n  })).isRequired,\r\n};\r\n\r\nexport default LyricsGrid;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactPlayer from 'react-player';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst HorizontalLine = () => <hr style={{ maxWidth: '500px' }} />;\r\n\r\nconst LyricsPage = ({ lyricsList }) => {\r\n  const { id: activeLyricsId } = useParams();\r\n  const {\r\n    title,\r\n    link,\r\n    singer,\r\n    lyricist,\r\n    language,\r\n    translation,\r\n    commentary,\r\n    lyrics,\r\n    footnotes,\r\n  } = lyricsList.find(({ id }) => id === activeLyricsId);\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Typography variant=\"h5\">{title.original}</Typography>\r\n      <Typography variant=\"subtitle1\">{`\"${title.english}\"`}</Typography>\r\n      <br />\r\n      <ReactPlayer url={link} style={{ margin: '0 auto' }} />\r\n      <br />\r\n      <HorizontalLine />\r\n      <Typography variant=\"subtitle2\">{`Singer - ${singer}`}</Typography>\r\n      <Typography variant=\"subtitle2\">{`Lyricist - ${lyricist}`}</Typography>\r\n      <Typography variant=\"subtitle2\">{`Original language - ${language}`}</Typography>\r\n      <Typography variant=\"subtitle2\">{`English translator - ${translation}`}</Typography>\r\n      <HorizontalLine />\r\n      <Typography variant=\"subtitle1\">Harman&apos;s commentary</Typography>\r\n      {commentary.map((comment, i) => (\r\n        <Typography variant=\"body2\" gutterBottom key={i.toString()}>\r\n          {comment}\r\n        </Typography>\r\n      ))}\r\n      <HorizontalLine />\r\n      <Typography variant=\"subtitle1\">Lyrics</Typography>\r\n      {lyrics.map((lyric, i) => (\r\n        <Fragment key={i.toString()}>\r\n          <Typography variant=\"body2\" gutterBottom>{lyric[0]}</Typography>\r\n          <Typography variant=\"body2\" style={{ fontWeight: 600 }}>{lyric[1]}</Typography>\r\n          <br />\r\n        </Fragment>\r\n      ))}\r\n      {footnotes && (\r\n        <>\r\n          <HorizontalLine />\r\n          <Typography variant=\"subtitle1\">Footnotes</Typography>\r\n          {footnotes.map((footnote, i) => (\r\n            <Typography variant=\"subtitle2\" gutterBottom key={i.toString()}>{footnote}</Typography>\r\n          ))}\r\n          <br />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nLyricsPage.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.shape({\r\n        original: PropTypes.string.isRequired,\r\n        english: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n      link: PropTypes.string.isRequired,\r\n      singer: PropTypes.string.isRequired,\r\n      lyricist: PropTypes.string.isRequired,\r\n      language: PropTypes.string.isRequired,\r\n      translation: PropTypes.string.isRequired,\r\n      commentary: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n      lyrics: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\r\n      footnotes: PropTypes.arrayOf(PropTypes.string),\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default LyricsPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport AppToolbar from './components/AppToolbar/AppToolbar';\r\nimport LyricsGrid from './components/LyricsGrid/LyricsGrid';\r\nimport LyricsPage from './components/LyricsPage/LyricsPage';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#192978',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  contentContainer: {\r\n    margin: '24px',\r\n  },\r\n});\r\n\r\nconst App = ({ lyricsList }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <AppToolbar />\r\n        <div className={classes.contentContainer}>\r\n          <Switch>\r\n            <Route path=\"/lyrics/:id\">\r\n              <LyricsPage lyricsList={lyricsList} />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <LyricsGrid lyricsList={lyricsList} />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nimport App from './App';\r\n\r\nconst LYRIC_FILE_NAMES = [\r\n  'aisi-lagi-lagan',\r\n  'ajab-andaz',\r\n  'ja-mur-ja',\r\n  'kamli',\r\n  'kiven-mukhre-ton',\r\n  'kithe-ishq-da-rog',\r\n  'punjab-di-malika',\r\n  'pyala-rakh-de',\r\n  'sambh-leh-dahooda',\r\n  'sar-jhukaya-ton',\r\n  'sun-charkhe-di',\r\n  'tere-tille-ton',\r\n];\r\n\r\nconst AppContainer = () => {\r\n  const [lyricsList, setLyricsList] = useState(null);\r\n  const [isFetchError, setIsFetchError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLyrics = async () => {\r\n      try {\r\n        const responses = await Promise.all(LYRIC_FILE_NAMES.map((name) => fetch(`data/${name}.json`)));\r\n        const data = await Promise.all(responses.map((response) => (response.json())));\r\n        setLyricsList(data);\r\n      } catch {\r\n        setIsFetchError(true);\r\n      }\r\n    };\r\n    fetchLyrics();\r\n  }, []);\r\n\r\n  if (lyricsList !== null) {\r\n    return <App lyricsList={lyricsList} />;\r\n  }\r\n  if (isFetchError) {\r\n    return 'Oops! Something went wrong.';\r\n  }\r\n  return 'Loading...';\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}