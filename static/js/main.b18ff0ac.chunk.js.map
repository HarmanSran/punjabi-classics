{"version":3,"sources":["components/AppToolbar/components/GithubButton.js","components/AppToolbar/components/BackButton.js","components/AppToolbar/AppToolbar.js","components/LyricsGrid/components/LyricsCard.js","components/LyricsGrid/LyricsGrid.js","components/LyricsPage/LyricsPage.js","App.js","AppContainer.js","index.js"],"names":["GithubButton","Tooltip","title","aria-label","IconButton","edge","color","onClick","window","open","repository","useStyles","makeStyles","wrapper","marginRight","BackButton","onClickNavBack","classes","className","theme","root","flexGrow","display","actions","position","marginLeft","spacing","width","AppToolbar","isNavBackVisible","AppBar","Toolbar","Typography","variant","noWrap","card","cardContent","height","fontSize","subTitle","marginBottom","LyricsCard","singer","originalTitle","translatedTitle","lyricist","onClickLyrics","Card","CardContent","gutterBottom","component","CardActions","Button","size","defaultProps","LyricsGrid","lyricsList","Grid","container","justify","map","id","item","original","english","LineBreak","style","maxWidth","LyricsPage","lyrics","link","language","translation","commentary","footnotes","textAlign","url","margin","comment","i","toString","lyric","fontWeight","footnote","createMuiTheme","palette","primary","main","contentContainer","App","useState","activeLyricsId","setActiveLyricsId","ThemeProvider","find","LYRIC_FILE_NAMES","AppContainer","setLyricsList","isFetchError","setIsFetchError","useEffect","a","Promise","all","name","fetch","responses","response","json","data","fetchLyrics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2aAmBeA,EAbM,kBACnB,cAACC,EAAA,EAAD,CAASC,MAAM,SAASC,aAAW,SAAnC,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACNH,aAAW,cACXI,QAAS,kBAAMC,OAAOC,KAAKC,MAJ7B,SAME,cAAC,IAAD,S,iBCPAC,EAAYC,YAAW,CAC3BC,QAAS,CACPC,YAAa,UA0BFC,EAtBI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACdC,EAAUN,IAChB,OACE,qBAAKO,UAAWD,EAAQJ,QAAxB,SACE,cAACZ,EAAA,EAAD,CAASC,MAAM,OAAOC,aAAW,OAAjC,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACNH,aAAW,OACXI,QAASS,EAJX,SAME,cAAC,IAAD,WCdJL,EAAYC,aAAW,SAACO,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZnB,MAAO,CACLmB,SAAU,EACVC,QAAS,SAEXC,QAAS,CACPD,QAAS,OACTE,SAAU,WACVC,WAAYN,EAAMO,QAAQ,GAC1BC,MAAO,YAgCIC,EA5BI,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,iBAAkBb,EAAqB,EAArBA,eAChCC,EAAUN,IAEhB,OACE,sBAAKO,UAAWD,EAAQG,KAAxB,UACE,cAACU,EAAA,EAAD,CAAQN,SAAS,QAAQlB,MAAM,UAA/B,SACE,eAACyB,EAAA,EAAD,WACGF,GAAoB,cAAC,EAAD,CAAYb,eAAgBA,IACjD,cAACgB,EAAA,EAAD,CAAYd,UAAWD,EAAQf,MAAO+B,QAAQ,KAAKC,QAAM,EAAzD,8BAGA,qBAAKhB,UAAWD,EAAQM,QAAxB,SAEE,cAAC,EAAD,WAKN,cAACQ,EAAA,EAAD,Q,6CCnCApB,EAAYC,YAAW,CAC3BuB,KAAM,CACJR,MAAO,SAETS,YAAa,CACXC,OAAQ,SAEVnC,MAAO,CACLoC,SAAU,IAEZC,SAAU,CACRD,SAAU,GACVE,aAAc,MAIZC,EAAa,SAAC,GAEb,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,cAAeC,EACnB,EADmBA,gBAAiBC,EACpC,EADoCA,SAAUC,EAC9C,EAD8CA,cAE5C7B,EAAUN,IAEhB,OACE,eAACoC,EAAA,EAAD,CAAM7B,UAAWD,EAAQkB,KAAzB,UACE,eAACa,EAAA,EAAD,CAAa9B,UAAWD,EAAQmB,YAAhC,UACE,cAACJ,EAAA,EAAD,CAAYd,UAAWD,EAAQf,MAAOI,MAAM,gBAAgB2C,cAAY,EAAxE,SACGP,IAEH,cAACV,EAAA,EAAD,CAAYC,QAAQ,KAAKiB,UAAU,KAAnC,SACGP,IAEH,cAACX,EAAA,EAAD,CAAYd,UAAWD,EAAQsB,SAAUjC,MAAM,gBAA/C,6BACgBuC,KAEhB,cAACb,EAAA,EAAD,CAAYC,QAAQ,QAAQiB,UAAU,IAAtC,oBACON,EADP,UAIF,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQ7C,QAASuC,EAAeO,KAAK,QAArC,gCAcRZ,EAAWa,aAAe,CACxBT,SAAU,WAGGJ,QCzBAc,EAnCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYV,EAAf,EAAeA,cAAf,OACjB,cAACW,EAAA,EAAD,CACEC,WAAS,EACThC,QAAS,EACTiC,QAAQ,SAHV,SAKGH,EAAWI,KAAI,gBACdlB,EADc,EACdA,OAAQxC,EADM,EACNA,MAAO2C,EADD,EACCA,SAAUgB,EADX,EACWA,GADX,OAGd,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAC,EAAD,CACEpB,OAAQA,EACRC,cAAezC,EAAM6D,SACrBnB,gBAAiB1C,EAAM8D,QACvBnB,SAAUA,EACVC,cAAe,kBAAMA,EAAce,OANvBA,S,iBCThBI,EAAY,kBAAM,oBAAIC,MAAO,CAAEC,SAAU,YAwEhCC,EAtEI,SAAC,GAAD,QACjBC,OACEnE,EAFe,EAEfA,MACAoE,EAHe,EAGfA,KACA5B,EAJe,EAIfA,OACAG,EALe,EAKfA,SACA0B,EANe,EAMfA,SACAC,EAPe,EAOfA,YACAC,EARe,EAQfA,WACAJ,EATe,EASfA,OACAK,EAVe,EAUfA,UAVe,OAajB,sBAAKR,MAAO,CAAES,UAAW,UAAzB,UACE,cAAC3C,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B/B,EAAM6D,WAChC,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,YAApB,oBAAqC/B,EAAM8D,QAA3C,OACA,uBACA,cAAC,IAAD,CAAaY,IAAKN,EAAMJ,MAAO,CAAEW,OAAQ,YACzC,uBACA,cAAC,EAAD,IACA,cAAC7C,EAAA,EAAD,CAAYC,QAAQ,YAApB,4BAA6CS,KAC7C,cAACV,EAAA,EAAD,CAAYC,QAAQ,YAApB,8BAA+CY,KAC/C,cAACb,EAAA,EAAD,CAAYC,QAAQ,YAApB,uCAAwDsC,KACxD,cAACvC,EAAA,EAAD,CAAYC,QAAQ,YAApB,wCAAyDuC,KACzD,cAAC,EAAD,IACA,cAACxC,EAAA,EAAD,CAAYC,QAAQ,YAApB,iCACCwC,EAAWb,KAAI,SAACkB,EAASC,GAAV,OACd,cAAC/C,EAAA,EAAD,CAAYC,QAAQ,QAAQgB,cAAY,EAAxC,SACG6B,GAD2CC,EAAEC,eAIlD,cAAC,EAAD,IACA,cAAChD,EAAA,EAAD,CAAYC,QAAQ,YAApB,oBACCoC,EAAOT,KAAI,SAACqB,EAAOF,GAAR,OACV,eAAC,WAAD,WACE,cAAC/C,EAAA,EAAD,CAAYC,QAAQ,QAAQgB,cAAY,EAAxC,SAA0CgC,EAAM,KAChD,cAACjD,EAAA,EAAD,CAAYC,QAAQ,QAAQiC,MAAO,CAAEgB,WAAY,KAAjD,SAAyDD,EAAM,KAC/D,yBAHaF,EAAEC,eAMlBN,GACC,qCACE,cAAC,EAAD,IACA,cAAC1C,EAAA,EAAD,CAAYC,QAAQ,YAApB,uBACCyC,EAAUd,KAAI,SAACuB,EAAUJ,GAAX,OACb,cAAC/C,EAAA,EAAD,CAAYC,QAAQ,YAAYgB,cAAY,EAA5C,SAAiEkC,GAAfJ,EAAEC,eAEtD,8BC/CF7D,EAAQiE,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKN5E,EAAYC,YAAW,CAC3B4E,iBAAkB,CAChBX,OAAQ,UAsBGY,EAlBH,SAAC,GAAoB,IAAlBjC,EAAiB,EAAjBA,WACb,EAA4CkC,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACM3E,EAAUN,IAChB,OACE,eAACkF,EAAA,EAAD,CAAe1E,MAAOA,EAAtB,UACE,cAAC,EAAD,CAAYU,iBAAqC,OAAnB8D,EAAyB3E,eAAgB,kBAAM4E,EAAkB,SAC/F,sBAAK1E,UAAWD,EAAQuE,iBAAxB,UACsB,OAAnBG,GAA2B,cAAC,EAAD,CAAYnC,WAAYA,EAAYV,cAAe,SAACe,GAAD,OAAQ+B,EAAkB/B,MACrF,OAAnB8B,GAA2B,cAAC,EAAD,CAAYtB,OAAQb,EAAWsC,MAAK,qBAAGjC,KAAgB8B,cC1BrFI,EAAmB,CACvB,YACA,gBACA,oBACA,kBACA,iBACA,cA6BaC,EA1BM,WACnB,MAAoCN,mBAAS,MAA7C,mBAAOlC,EAAP,KAAmByC,EAAnB,KACA,EAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAeA,OAbAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAEQC,QAAQC,IAAIR,EAAiBnC,KAAI,SAAC4C,GAAD,OAAUC,MAAM,QAAD,OAASD,EAAT,cAFxD,cAEVE,EAFU,gBAGGJ,QAAQC,IAAIG,EAAU9C,KAAI,SAAC+C,GAAD,OAAeA,EAASC,WAHrD,OAGVC,EAHU,OAIhBZ,EAAcY,GAJE,kDAMhBV,GAAgB,GANA,0DAAH,qDASjBW,KACC,IAEgB,OAAftD,EACK,cAAC,EAAD,CAAKA,WAAYA,IAEtB0C,EACK,8BAEF,cC9BTa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b18ff0ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { repository } from '../../../../package.json';\r\n\r\nconst GithubButton = () => (\r\n  <Tooltip title=\"Source\" aria-label=\"source\">\r\n    <IconButton\r\n      edge=\"start\"\r\n      color=\"inherit\"\r\n      aria-label=\"open github\"\r\n      onClick={() => window.open(repository)}\r\n    >\r\n      <GitHubIcon />\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n\r\nexport default GithubButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    marginRight: '12px',\r\n  },\r\n});\r\n\r\nconst BackButton = ({ onClickNavBack }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Tooltip title=\"Back\" aria-label=\"back\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"back\"\r\n          onClick={onClickNavBack}\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nBackButton.propTypes = {\r\n  onClickNavBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BackButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import SearchField from './components/SearchField';\r\nimport GithubButton from './components/GithubButton';\r\nimport BackButton from './components/BackButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'block',\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst AppToolbar = ({ isNavBackVisible, onClickNavBack }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"primary\">\r\n        <Toolbar>\r\n          {isNavBackVisible && <BackButton onClickNavBack={onClickNavBack} />}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Punjabi Classics\r\n          </Typography>\r\n          <div className={classes.actions}>\r\n            {/* <SearchField /> */}\r\n            <GithubButton />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Empty <Toolbar> to give appropriate vertical padding since actual <AppBar> is fixed position */}\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nAppToolbar.propTypes = {\r\n  isNavBackVisible: PropTypes.bool.isRequired,\r\n  onClickNavBack: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppToolbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '450px',\r\n  },\r\n  cardContent: {\r\n    height: '150px',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  subTitle: {\r\n    fontSize: 13,\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst LyricsCard = ({\r\n  singer, originalTitle, translatedTitle, lyricist, onClickLyrics,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {singer}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {originalTitle}\r\n        </Typography>\r\n        <Typography className={classes.subTitle} color=\"textSecondary\">\r\n          {`Lyricist: ${lyricist}`}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {`\"${translatedTitle}\"`}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button onClick={onClickLyrics} size=\"small\">Go to lyrics</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLyricsCard.propTypes = {\r\n  singer: PropTypes.string.isRequired,\r\n  originalTitle: PropTypes.string.isRequired,\r\n  translatedTitle: PropTypes.string.isRequired,\r\n  onClickLyrics: PropTypes.func.isRequired,\r\n  lyricist: PropTypes.string,\r\n};\r\n\r\nLyricsCard.defaultProps = {\r\n  lyricist: 'Unknown',\r\n};\r\n\r\nexport default LyricsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LyricsCard from './components/LyricsCard';\r\n\r\nconst LyricsGrid = ({ lyricsList, onClickLyrics }) => (\r\n  <Grid\r\n    container\r\n    spacing={3}\r\n    justify=\"center\"\r\n  >\r\n    {lyricsList.map(({\r\n      singer, title, lyricist, id,\r\n    }) => (\r\n      <Grid item key={id}>\r\n        <LyricsCard\r\n          singer={singer}\r\n          originalTitle={title.original}\r\n          translatedTitle={title.english}\r\n          lyricist={lyricist}\r\n          onClickLyrics={() => onClickLyrics(id)}\r\n        />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nLyricsGrid.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    singer: PropTypes.string.isRequired,\r\n    title: PropTypes.shape({\r\n      original: PropTypes.string.isRequired,\r\n      english: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    lyricist: PropTypes.string,\r\n  })).isRequired,\r\n  onClickLyrics: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LyricsGrid;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst LineBreak = () => <hr style={{ maxWidth: '500px' }} />;\r\n\r\nconst LyricsPage = ({\r\n  lyrics: {\r\n    title,\r\n    link,\r\n    singer,\r\n    lyricist,\r\n    language,\r\n    translation,\r\n    commentary,\r\n    lyrics,\r\n    footnotes,\r\n  },\r\n}) => (\r\n  <div style={{ textAlign: 'center' }}>\r\n    <Typography variant=\"h5\">{title.original}</Typography>\r\n    <Typography variant=\"subtitle1\">{`\"${title.english}\"`}</Typography>\r\n    <br />\r\n    <ReactPlayer url={link} style={{ margin: '0 auto' }} />\r\n    <br />\r\n    <LineBreak />\r\n    <Typography variant=\"subtitle2\">{`Singer - ${singer}`}</Typography>\r\n    <Typography variant=\"subtitle2\">{`Lyricist - ${lyricist}`}</Typography>\r\n    <Typography variant=\"subtitle2\">{`Original language - ${language}`}</Typography>\r\n    <Typography variant=\"subtitle2\">{`English translator - ${translation}`}</Typography>\r\n    <LineBreak />\r\n    <Typography variant=\"subtitle1\">Harman&apos;s commentary</Typography>\r\n    {commentary.map((comment, i) => (\r\n      <Typography variant=\"body2\" gutterBottom key={i.toString()}>\r\n        {comment}\r\n      </Typography>\r\n    ))}\r\n    <LineBreak />\r\n    <Typography variant=\"subtitle1\">Lyrics</Typography>\r\n    {lyrics.map((lyric, i) => (\r\n      <Fragment key={i.toString()}>\r\n        <Typography variant=\"body2\" gutterBottom>{lyric[0]}</Typography>\r\n        <Typography variant=\"body2\" style={{ fontWeight: 600 }}>{lyric[1]}</Typography>\r\n        <br />\r\n      </Fragment>\r\n    ))}\r\n    {footnotes && (\r\n      <>\r\n        <LineBreak />\r\n        <Typography variant=\"subtitle1\">Footnotes</Typography>\r\n        {footnotes.map((footnote, i) => (\r\n          <Typography variant=\"subtitle2\" gutterBottom key={i.toString()}>{footnote}</Typography>\r\n        ))}\r\n        <br />\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nLyricsPage.propTypes = {\r\n  lyrics: PropTypes.shape({\r\n    title: PropTypes.shape({\r\n      original: PropTypes.string.isRequired,\r\n      english: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    singer: PropTypes.string.isRequired,\r\n    lyricist: PropTypes.string.isRequired,\r\n    language: PropTypes.string.isRequired,\r\n    translation: PropTypes.string.isRequired,\r\n    commentary: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    lyrics: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\r\n    footnotes: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n};\r\n\r\nexport default LyricsPage;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport AppToolbar from './components/AppToolbar/AppToolbar';\r\nimport LyricsGrid from './components/LyricsGrid/LyricsGrid';\r\nimport LyricsPage from './components/LyricsPage/LyricsPage';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#192978',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  contentContainer: {\r\n    margin: '24px',\r\n  },\r\n});\r\n\r\nconst App = ({ lyricsList }) => {\r\n  const [activeLyricsId, setActiveLyricsId] = useState(null);\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppToolbar isNavBackVisible={activeLyricsId !== null} onClickNavBack={() => setActiveLyricsId(null)} />\r\n      <div className={classes.contentContainer}>\r\n        {activeLyricsId === null && <LyricsGrid lyricsList={lyricsList} onClickLyrics={(id) => setActiveLyricsId(id)} />}\r\n        {activeLyricsId !== null && <LyricsPage lyrics={lyricsList.find(({ id }) => id === activeLyricsId)} />}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nimport App from './App';\r\n\r\nconst LYRIC_FILE_NAMES = [\r\n  'ja-mur-ja',\r\n  'pyala-rakh-de',\r\n  'sambh-leh-dahooda',\r\n  'aisi-lagi-lagan',\r\n  'tere-tille-ton',\r\n  'ajab-andaz',\r\n];\r\n\r\nconst AppContainer = () => {\r\n  const [lyricsList, setLyricsList] = useState(null);\r\n  const [isFetchError, setIsFetchError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLyrics = async () => {\r\n      try {\r\n        const responses = await Promise.all(LYRIC_FILE_NAMES.map((name) => fetch(`data/${name}.json`)));\r\n        const data = await Promise.all(responses.map((response) => (response.json())));\r\n        setLyricsList(data);\r\n      } catch {\r\n        setIsFetchError(true);\r\n      }\r\n    };\r\n    fetchLyrics();\r\n  }, []);\r\n\r\n  if (lyricsList !== null) {\r\n    return <App lyricsList={lyricsList} />;\r\n  }\r\n  if (isFetchError) {\r\n    return 'Oops! Something went wrong.';\r\n  }\r\n  return 'Loading...';\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppContainer from './AppContainer';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}