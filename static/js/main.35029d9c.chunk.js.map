{"version":3,"sources":["components/AppToolbar/components/GithubButton.js","components/AppToolbar/components/HomeButton.js","components/AppToolbar/AppToolbar.js","components/LyricsGrid/components/LyricsCard.js","components/LyricsGrid/LyricsGrid.js","components/LyricsPage/LyricsPage.js","App.js","AppContainer.js","index.js"],"names":["GithubButton","Tooltip","title","aria-label","IconButton","edge","color","onClick","window","open","repository","useStyles","makeStyles","wrapper","marginRight","HomeButton","onClickHome","classes","className","theme","root","flexGrow","display","breakpoints","up","actions","position","marginLeft","width","spacing","AppToolbar","AppBar","Toolbar","Typography","variant","noWrap","card","cardContent","height","fontSize","subTitle","marginBottom","LyricsCard","singer","originalTitle","translatedTitle","lyricist","onClickLyrics","Card","CardContent","gutterBottom","component","CardActions","Button","size","defaultProps","LyricsGrid","lyricsList","Grid","container","map","id","item","original","english","LyricsPage","lyrics","createMuiTheme","palette","primary","main","contentContainer","margin","App","useState","activeLyricsId","setActiveLyricsId","ThemeProvider","find","LYRIC_FILE_PATHS","AppContainer","setLyricsList","isFetchError","setIsFetchError","useEffect","a","Promise","all","path","fetch","responses","response","json","data","fetchLyrics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gbAmBeA,EAbM,kBACnB,cAACC,EAAA,EAAD,CAASC,MAAM,SAASC,aAAW,SAAnC,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACNH,aAAW,cACXI,QAAS,kBAAMC,OAAOC,KAAKC,MAJ7B,SAME,cAAC,IAAD,S,iBCPAC,EAAYC,YAAW,CAC3BC,QAAS,CACPC,YAAa,UA0BFC,EAtBI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACdC,EAAUN,IAChB,OACE,qBAAKO,UAAWD,EAAQJ,QAAxB,SACE,cAACZ,EAAA,EAAD,CAASC,MAAM,OAAOC,aAAW,OAAjC,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACNH,aAAW,OACXI,QAASS,EAJX,SAME,cAAC,IAAD,WCdJL,EAAYC,aAAW,SAACO,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZnB,MAAM,aACJmB,SAAU,EACVC,QAAS,QACRH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,QAAQ,aACNH,QAAS,OACTI,SAAU,WACVC,WAAY,EACZC,MAAO,QACNT,EAAMI,YAAYC,GAAG,MAAQ,CAC5BG,WAAYR,EAAMU,QAAQ,GAC1BD,MAAO,aAgCEE,EA3BI,SAAC,GAAqB,IAAnBd,EAAkB,EAAlBA,YACdC,EAAUN,IAEhB,OACE,sBAAKO,UAAWD,EAAQG,KAAxB,UACE,cAACW,EAAA,EAAD,CAAQL,SAAS,QAAQpB,MAAM,UAA/B,SACE,eAAC0B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYf,UAAWD,EAAQf,MAAOgC,QAAQ,KAAKC,QAAM,EAAzD,8BAGA,sBAAKjB,UAAWD,EAAQQ,QAAxB,UAEE,cAAC,EAAD,CAAYT,YAAaA,IACzB,cAAC,EAAD,YAKN,cAACgB,EAAA,EAAD,Q,6CC1CArB,EAAYC,YAAW,CAC3BwB,KAAM,CACJR,MAAO,SAETS,YAAa,CACXC,OAAQ,SAEVpC,MAAO,CACLqC,SAAU,IAEZC,SAAU,CACRD,SAAU,GACVE,aAAc,MAIZC,EAAa,SAAC,GAEb,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,cAAeC,EACnB,EADmBA,gBAAiBC,EACpC,EADoCA,SAAUC,EAC9C,EAD8CA,cAE5C9B,EAAUN,IAEhB,OACE,eAACqC,EAAA,EAAD,CAAM9B,UAAWD,EAAQmB,KAAzB,UACE,eAACa,EAAA,EAAD,CAAa/B,UAAWD,EAAQoB,YAAhC,UACE,cAACJ,EAAA,EAAD,CAAYf,UAAWD,EAAQf,MAAOI,MAAM,gBAAgB4C,cAAY,EAAxE,SACGP,IAEH,cAACV,EAAA,EAAD,CAAYC,QAAQ,KAAKiB,UAAU,KAAnC,SACGP,IAEH,cAACX,EAAA,EAAD,CAAYf,UAAWD,EAAQuB,SAAUlC,MAAM,gBAA/C,6BACgBwC,KAEhB,cAACb,EAAA,EAAD,CAAYC,QAAQ,QAAQiB,UAAU,IAAtC,oBACON,EADP,UAIF,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQ9C,QAASwC,EAAeO,KAAK,QAArC,+BAcRZ,EAAWa,aAAe,CACxBT,SAAU,WAGGJ,QC7BAc,EA/BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYV,EAAf,EAAeA,cAAf,OACjB,cAACW,EAAA,EAAD,CAAMC,WAAS,EAAC9B,QAAS,EAAzB,SACG4B,EAAWG,KAAI,gBACdjB,EADc,EACdA,OAAQzC,EADM,EACNA,MAAO4C,EADD,EACCA,SAAUe,EADX,EACWA,GADX,OAGd,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACEnB,OAAQA,EACRC,cAAe1C,EAAM6D,SACrBlB,gBAAiB3C,EAAM8D,QACvBlB,SAAUA,EACVC,cAAe,kBAAMA,EAAcc,OANvBA,SCSPI,EAfI,SAAC,GAAD,IAAa/D,EAAb,EAAGgE,OAAUhE,MAAb,OACjB,8BACE,cAAC+B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BhC,EAAM6D,cCC9B5C,EAAQgD,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKN3D,EAAYC,YAAW,CAC3B2D,iBAAkB,CAChBC,OAAQ,UAsBGC,EAlBH,SAAC,GAAoB,IAAlBhB,EAAiB,EAAjBA,WACb,EAA4CiB,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACM3D,EAAUN,IAChB,OACE,eAACkE,EAAA,EAAD,CAAe1D,MAAOA,EAAtB,UACE,cAAC,EAAD,CAAYH,YAAa,kBAAM4D,EAAkB,SACjD,sBAAK1D,UAAWD,EAAQsD,iBAAxB,UACsB,OAAnBI,GAA2B,cAAC,EAAD,CAAYlB,WAAYA,EAAYV,cAAe,SAACc,GAAD,OAAQe,EAAkBf,MACrF,OAAnBc,GAA2B,cAAC,EAAD,CAAYT,OAAQT,EAAWqB,MAAK,qBAAGjB,KAAgBc,cC1BrFI,EAAmB,CACvB,sBACA,0BACA,+BA6BaC,EA1BM,WACnB,MAAoCN,mBAAS,MAA7C,mBAAOjB,EAAP,KAAmBwB,EAAnB,KACA,EAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAeA,OAbAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAEQC,QAAQC,IAAIR,EAAiBnB,KAAI,SAAC4B,GAAD,OAAUC,MAAMD,OAFzD,cAEVE,EAFU,gBAGGJ,QAAQC,IAAIG,EAAU9B,KAAI,SAAC+B,GAAD,OAAeA,EAASC,WAHrD,OAGVC,EAHU,OAIhBZ,EAAcY,GAJE,kDAMhBV,GAAgB,GANA,0DAAH,qDASjBW,KACC,IAEgB,OAAfrC,EACK,cAAC,EAAD,CAAKA,WAAYA,IAEtByB,EACK,8BAEF,cC3BTa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35029d9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { repository } from '../../../../package.json';\r\n\r\nconst GithubButton = () => (\r\n  <Tooltip title=\"Source\" aria-label=\"source\">\r\n    <IconButton\r\n      edge=\"start\"\r\n      color=\"inherit\"\r\n      aria-label=\"open github\"\r\n      onClick={() => window.open(repository)}\r\n    >\r\n      <GitHubIcon />\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n\r\nexport default GithubButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    marginRight: '24px',\r\n  },\r\n});\r\n\r\nconst HomeButton = ({ onClickHome }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Tooltip title=\"Home\" aria-label=\"home\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"home\"\r\n          onClick={onClickHome}\r\n        >\r\n          <HomeIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeButton.propTypes = {\r\n  onClickHome: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default HomeButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import SearchField from './components/SearchField';\r\nimport GithubButton from './components/GithubButton';\r\nimport HomeButton from './components/HomeButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    position: 'relative',\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AppToolbar = ({ onClickHome }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Punjabi Classics\r\n          </Typography>\r\n          <div className={classes.actions}>\r\n            {/* <SearchField /> */}\r\n            <HomeButton onClickHome={onClickHome} />\r\n            <GithubButton />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Empty <Toolbar> to give appropriate vertical padding since actual <AppBar> is fixed position */}\r\n      <Toolbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nAppToolbar.propTypes = {\r\n  onClickHome: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppToolbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '450px',\r\n  },\r\n  cardContent: {\r\n    height: '150px',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  subTitle: {\r\n    fontSize: 13,\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst LyricsCard = ({\r\n  singer, originalTitle, translatedTitle, lyricist, onClickLyrics,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {singer}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {originalTitle}\r\n        </Typography>\r\n        <Typography className={classes.subTitle} color=\"textSecondary\">\r\n          {`Lyricist: ${lyricist}`}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {`\"${translatedTitle}\"`}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button onClick={onClickLyrics} size=\"small\">Translation</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLyricsCard.propTypes = {\r\n  singer: PropTypes.string.isRequired,\r\n  originalTitle: PropTypes.string.isRequired,\r\n  translatedTitle: PropTypes.string.isRequired,\r\n  onClickLyrics: PropTypes.func.isRequired,\r\n  lyricist: PropTypes.string,\r\n};\r\n\r\nLyricsCard.defaultProps = {\r\n  lyricist: 'Unknown',\r\n};\r\n\r\nexport default LyricsCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LyricsCard from './components/LyricsCard';\r\n\r\nconst LyricsGrid = ({ lyricsList, onClickLyrics }) => (\r\n  <Grid container spacing={3}>\r\n    {lyricsList.map(({\r\n      singer, title, lyricist, id,\r\n    }) => (\r\n      <Grid item key={id}>\r\n        <LyricsCard\r\n          singer={singer}\r\n          originalTitle={title.original}\r\n          translatedTitle={title.english}\r\n          lyricist={lyricist}\r\n          onClickLyrics={() => onClickLyrics(id)}\r\n        />\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nLyricsGrid.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    singer: PropTypes.string.isRequired,\r\n    title: PropTypes.shape({\r\n      original: PropTypes.string.isRequired,\r\n      english: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    lyricist: PropTypes.string,\r\n  })).isRequired,\r\n  onClickLyrics: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LyricsGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst LyricsPage = ({ lyrics: { title } }) => (\r\n  <div>\r\n    <Typography variant=\"h5\">{title.original}</Typography>\r\n  </div>\r\n);\r\n\r\nLyricsPage.propTypes = {\r\n  lyrics: PropTypes.shape({\r\n    title: PropTypes.shape({\r\n      original: PropTypes.string.isRequired,\r\n      english: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default LyricsPage;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport AppToolbar from './components/AppToolbar/AppToolbar';\r\nimport LyricsGrid from './components/LyricsGrid/LyricsGrid';\r\nimport LyricsPage from './components/LyricsPage/LyricsPage';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#192978',\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  contentContainer: {\r\n    margin: '24px',\r\n  },\r\n});\r\n\r\nconst App = ({ lyricsList }) => {\r\n  const [activeLyricsId, setActiveLyricsId] = useState(null);\r\n  const classes = useStyles();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppToolbar onClickHome={() => setActiveLyricsId(null)} />\r\n      <div className={classes.contentContainer}>\r\n        {activeLyricsId === null && <LyricsGrid lyricsList={lyricsList} onClickLyrics={(id) => setActiveLyricsId(id)} />}\r\n        {activeLyricsId !== null && <LyricsPage lyrics={lyricsList.find(({ id }) => id === activeLyricsId)} />}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  lyricsList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nimport App from './App';\r\n\r\nconst LYRIC_FILE_PATHS = [\r\n  'data/ja-mur-ja.json',\r\n  'data/pyala-rakh-de.json',\r\n  'data/sambh-leh-dahooda.json',\r\n];\r\n\r\nconst AppContainer = () => {\r\n  const [lyricsList, setLyricsList] = useState(null);\r\n  const [isFetchError, setIsFetchError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLyrics = async () => {\r\n      try {\r\n        const responses = await Promise.all(LYRIC_FILE_PATHS.map((path) => fetch(path)));\r\n        const data = await Promise.all(responses.map((response) => (response.json())));\r\n        setLyricsList(data);\r\n      } catch {\r\n        setIsFetchError(true);\r\n      }\r\n    };\r\n    fetchLyrics();\r\n  }, []);\r\n\r\n  if (lyricsList !== null) {\r\n    return <App lyricsList={lyricsList} />;\r\n  }\r\n  if (isFetchError) {\r\n    return 'Oops! Something went wrong.';\r\n  }\r\n  return 'Loading...';\r\n};\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}